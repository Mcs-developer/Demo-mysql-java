
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author marloncs
 */
    public class FormPerson extends javax.swing.JFrame {
    
    SQLAccess db;
    CustomListModel list_model;
    DateFormat formatMysql = new SimpleDateFormat("yyyy-MM-dd");
    DateFormat formatLocal = new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form FormPerson
     */
    public FormPerson() throws Exception{
        initComponents();
        try {
            db = new SQLAccess();
            list_model = new CustomListModel(db.getPersons());
            listPerson.setModel(list_model);
        }catch(Exception e) {
            throw e;
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCode = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtBirthDay = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPerson = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Codigo");

        jLabel2.setText("Nombre");

        jLabel3.setText("Fecha de Nacimiento");

        btnAdd.setText("Agregar");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Actualizar");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        listPerson.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listPerson.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listPersonValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listPerson);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(jLabel3))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnDelete)
                                .addGap(99, 99, 99)))
                        .addContainerGap(40, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnUpdate)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(IsFilled()) {
            try {
                
                Date birthDay = formatMysql.parse(txtBirthDay.getText().split("/")[2] + "-" + txtBirthDay.getText().split("/")[1] + "-" +txtBirthDay.getText().split("/")[0] );
                java.sql.Date sqlDate = new java.sql.Date(birthDay.getTime());
                Person newPerson = new Person(txtCode.getText(), txtName.getText(),sqlDate);
                db.insert(newPerson);
                list_model.addPerson(newPerson);
                resetFields();
                JOptionPane.showMessageDialog(null, "Registro insertado correctamente");
                
            }catch(ParseException e) {
                e.printStackTrace();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "Registro existente, digite otro numero de identificacion");
            }
        }else {
            JOptionPane.showMessageDialog(null, "Por favor llene todos los campos");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(IsFilled()){
            try {
                
                Date birthDay = formatMysql.parse(txtBirthDay.getText().split("/")[2] + "-" + txtBirthDay.getText().split("/")[1] + "-" +txtBirthDay.getText().split("/")[0] );
                java.sql.Date sqlDate = new java.sql.Date(birthDay.getTime());
                Person updatePerson = new Person(txtCode.getText(), txtName.getText(),sqlDate);
                int rowsAffected = db.update(updatePerson);
                if(rowsAffected > 0) {
                    //list_model.setList(db.getPersons());
                     int index = listPerson.getSelectedIndex();
                    if (index!=-1) {
                        list_model.update(index, updatePerson);
                    }
                    JOptionPane.showMessageDialog(null, "Registro actualizado correctamente");
                }else {
                    JOptionPane.showMessageDialog(null, "No se encontro registro a actualizar");
                }
                
            }catch(ParseException e) {
                e.printStackTrace();
            }catch(SQLException e){
                JOptionPane.showConfirmDialog(null, "Registro existente, digite otro numero de identificacion");
            }
        }else {
             JOptionPane.showMessageDialog(null, "Por favor llene todos los campos");       
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
         if(!txtCode.getText().equals("")){
            try {
                if(JOptionPane.showConfirmDialog(null, "Está seguro que desea eliminar el registro ?","",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                        int rowsAffected = db.delete(txtCode.getText());
                    if(rowsAffected > 0) {
                        int index = listPerson.getSelectedIndex();
                        if(index != -1){
                            list_model.deletePerson(index);
                        }
                        resetFields();
                        listPerson.clearSelection();
                        JOptionPane.showMessageDialog(null, "Registro eliminado correctamente");
                    }else {
                        JOptionPane.showMessageDialog(null, "No se encontro registro a eliminar");
                    }
                }
                
            }catch(SQLException e){
                JOptionPane.showConfirmDialog(null, "Registro existente, digite otro numero de identificacion");
            }
        }else {
             JOptionPane.showMessageDialog(null, "Por favor digite la cedula a eliminar");       
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void listPersonValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listPersonValueChanged
        // TODO add your handling code here:
        int index = listPerson.getSelectedIndex();
        if (index!=-1) {
            Person p = list_model.getPerson(index);
            txtCode.setText(p.getCode());
            txtName.setText(p.getName());
            Date birthDay = new Date(p.getBirthDay().getTime());
            txtBirthDay.setText(formatLocal.format(birthDay));
        }
    }//GEN-LAST:event_listPersonValueChanged

    private boolean IsFilled(){
      return   !txtCode.getText().equals("") && !txtName.getText().equals("") && !txtBirthDay.getText().equals("");
    }
    
    private void resetFields(){
        txtCode.setText("");
        txtName.setText("");
        txtBirthDay.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormPerson().setVisible(true);
                }catch(Exception e) {
                    e.printStackTrace();
                }
                 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listPerson;
    private javax.swing.JTextField txtBirthDay;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
